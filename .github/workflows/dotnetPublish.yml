name: Release

on:
  push:
    branches: [ "release" ]
jobs:
  publish:
    name: Publish Nuget package
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
        
    - name: Modify nuget package number
      uses: mingjun97/file-regex-replace@v1
      with:
        regex: '<Version>([0-9\.]*)</Version>'
        replacement: '<Version>$1.${{ github.run_number }}</Version>'
        flags: "g"
        include: 'InvidiousClient.csproj'
        exclude: '.^'
        encoding: 'utf8'
        path: 'InvidiousAPIClient'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Publish
    - name: Package
      run: dotnet pack -c Release -o . InvidiousAPIClient/InvidiousClient.csproj
      
    - name: Publish
      run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

    - name: Get version
      id: get_version
      uses: greenygh0st/net-proj-release-version@v1
      with:
        
        # 
        PROJ_FILE: InvidiousAPIClient/InvidiousClient.csproj

    - name: Create release body
        run: |
          BODY=$(cat << EOF
            ${{ github.event.head_commit.message }}

            You can also view this release on the NuGet Gallery:
            https://www.nuget.org/packages/InvidiousClient/${{ steps.get_version.outputs.RELEASE_VERSION }}

          EOF
          )
          echo "BODY<<EOF" >> $GITHUB_ENV
          echo "$BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

    - name: Create draft release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.RELEASE_VERSION }}
        release_name: ${{ steps.get_version.outputs.RELEASE_VERSION }}
        draft: true
        prerelease: false
        body: ${{ env.BODY }}
    - name: Upload DLL artifact to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: InvidiousAPIClient/bin/Release/net6.0/InvidiousClient.dll
        asset_name: InvidiousClient.${{ steps.get_version.outputs.RELEASE_VERSION }}.dll
        asset_content_type: application/dll

    - name: Upload Nuget artifact to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: InvidiousAPIClient/bin/Release/InvidiousClient.${{ steps.get_version.outputs.RELEASE_VERSION }}.nupkg
        asset_name: InvidiousClient.${{ steps.get_version.outputs.RELEASE_VERSION }}.nupkg
        asset_content_type: application/nupkg

    - name: Create release in GitHub
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}